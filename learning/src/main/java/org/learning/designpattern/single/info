Sometimes it's important to have only one instance for a class. 
For example, in a system there should be only one window manager (or only a file system or only a print spooler). 
Usually singletons are used for centralized management of internal or external resources and they provide a global point of access
to themselves.

Example 1 - Logger Classes

The Singleton pattern is used in the design of logger classes. This classes are ussualy implemented as a singletons, and provides 
a global logging access point in all the application components without being necessary to create an object each time a logging 
operations is performed.

Example 2 - Accesing resources in shared mode

It can be used in the design of an application that needs to work with the serial port. Let's say that there are many classes in 
the application, working in an multi-threading environment, which needs to operate actions on the serial port. In this case a 
singleton with synchronized methods could be used to be used to manage all the operations on the serial port.